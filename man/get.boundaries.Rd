% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/boundaries.R
\name{get.boundaries}
\alias{get.boundaries}
\title{Derive constant boundaries.}
\usage{
get.boundaries(power, n_sims, K, n, stat.func, data.generator, ...)
}
\arguments{
\item{power}{The type I error desired (or power)}

\item{n_sims}{Number of Monte-Carlo simulations}

\item{K}{Total number of stages}

\item{n}{Sample size per stage}

\item{stat.func}{Function (or list of functions)
to calculate the test statistic based on the generated data, at each
observed information rates. If this is a list
of functions, it needs to be the same length as the sequence of boundaries.}

\item{data.generator}{Function to generate data. The output of this function
should be a matrix, which is the input for stat.func.
First argument of this function needs to be n, the sample size, and the function
needs to be vectorized.}
}
\description{
Get the boundaries required for a particular power.
The boundaries are constant across stage, *for a particular stat.func*.
}
\details{
E.g. if you want Pocock boundaries, you would have a likelihood ratio stat.func
E.g. if you want OBF boundaries, you would have a score statistic stat.func.
}
\examples{
set.seed(101)
# replicate Pocock boundaries
get.boundaries(power=0.05, n_sims=1000, K=2, n=100,
               stat.func=function(x) mean(x) * sqrt(length(x)),
               data.generator=function(n) rnorm(n))

# replicate OBF boundaries
# notice the sqrt(2) in the stat.list
z.stat <- function(x) mean(x) * sqrt(length(x))
stat.list <- list(z.stat, function(...) z.stat(...) * sqrt(2))
get.boundaries(power=0.05, n_sims=1000, K=2, n=100,
               stat.func=stat.list,
               data.generator=function(n) rnorm(n))
}
